input {
  beats {
  port => 5044
}
}
filter {
xml {
source => "message"
store_xml => false
target => "build_stuff"
xpath => [
"/flow-build/queueId/text()", "queueId",
"/flow-build/timestamp/text()", "xmltimestamp",
"/flow-build/duration/text()", "duration",
"/flow-build/result/text()", "result",
"/flow-build/startTime/text()", "startTime"
]
}
mutate {
add_field => { "startTime_Int" => "%{startTime}" }
add_field => { "xmltimestamp_Int" => "%{xmltimestamp}" }
add_field => { "duration_Int" => "%{duration}" }
add_field => { "end_time" => "%{startTime}" }
}
mutate {
convert => {"startTime_Int" => "integer"}
convert => {"xmltimestamp_Int" => "integer"}
convert => {"duration_Int" => "integer"}
convert => {"end_time" => "integer"}
}
ruby { code => 'event.set("end_time", (event.get("startTime").to_i + event.get("duration").to_i))' }
ruby { code => 'event.set("duration_Int", (event.get("duration").to_i/1000))' }
mutate {
convert => {"end_time" => "integer"}
}
date {
match => [ "startTime_Int","UNIX", "UNIX_MS" ]
target => "startTime_time"
}
date {
match => [ "xmltimestamp_Int","UNIX", "UNIX_MS" ]
target => "xmltimestamp_time"
}
date {
match => [ "end_time","UNIX", "UNIX_MS" ]
target => "end_time_time"
}
}

output {
elasticsearch {
hosts => ["localhost:9200"]
index => "xml-created-by-me"
}
stdout {
codec => rubydebug
}
}

