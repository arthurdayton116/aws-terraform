input {
  beats {
  port => 5044
}
}
filter {

if "JENKINS_LOG" in [tags] {
grok{
match =>{
"message" => "^\[statusMsg=\s*%{GREEDYDATA:status_msg}$"
}}

mutate {
gsub => [ "status_msg", ".{1}$", "" ]
}

mutate {
add_field => {"source" => "jenkins_build log"}
}

json {
source => "status_msg"
}
}

if "JENKINS_XML" in [tags] {

xml {
source => "message"
store_xml => false
target => "build_stuff"
xpath => [
"/flow-build/queueId/text()", "queueId",
"/flow-build/timestamp/text()", "xmltimestamp",
"/flow-build/duration/text()", "duration",
"/flow-build/result/text()", "result",
"/flow-build/startTime/text()", "startTime"
]
}

if ![result] {
mutate { add_field => { "result" => "PROCESSING" } }
}

mutate {
add_field => {"startTime_Int" => "%{startTime}"}
add_field => {"xmltimestamp_Int" => "%{xmltimestamp}"}
add_field => { "duration_Int" => "%{duration}"}
add_field => {"end_time" => "%{startTime}" }
add_field => {"source" => "jenkins_build.xml"}
}

mutate {
convert => {"startTime_Int" => "integer"}
convert => {"xmltimestamp_Int" => "integer"}
convert => {"duration_Int" => "integer"}
convert => {"end_time" => "integer"}
}

ruby {code => 'event.set("end_time", (event.get("startTime").to_i + event.get("duration").to_i))'}

ruby {code => 'event.set("duration_Int", (event.get("duration").to_i/1000))'}

mutate {
convert => {"end_time" => "integer"}
}

date {
match => ["startTime_Int", "UNIX", "UNIX_MS"]
target => "startTime_time"
}

date {
match => ["xmltimestamp_Int", "UNIX", "UNIX_MS"]
target => "xmltimestamp_time"
}

date {
match => ["end_time", "UNIX", "UNIX_MS"]
target => "end_time_time"
}

}

}

output {
if "JENKINS_LOG" in [tags] {
elasticsearch {
hosts => ["localhost:9200"]
index => "jenkinslog-created-by-me"
}
}
if "JENKINS_XML" in [tags] {
elasticsearch {
hosts => ["localhost:9200"]
index => "xml-created-by-me"
}
}
stdout {
codec => rubydebug
}
}










input {
  beats {
  port => 5044
}
}
filter {

if "JENKINS_LOG" in [tags] {

grok {
match =>{
"message" => "^statusMsg={\s*%{GREEDYDATA:status_msg}}"
}}

grok {
match =>{
"status_msg" => ".*\"BUILD_TAG\":\s*\"%{DATA:BUILD_TAG}\""
}}

grok {
match =>{
"status_msg" => ".*\"build_start_time\":\s*\"%{DATA:build_start_time}\""
}}

grok {
match =>{
"status_msg" => ".*\"build_end_time\":\s*\"%{DATA:build_end_time}\""
}}

grok {
match =>{
"status_msg" => ".*\"build_duration_seconds\":\s*\"%{DATA:build_duration_seconds}\""
}}

grok {
match =>{
"status_msg" => ".*\"BUILD_TAG\":\s*\"%{DATA:BUILD_TAG}\""
}}

grok {
match =>{
"status_msg" => ".*\"absoluteUrl\":\s*\"%{DATA:absoluteUrl}\""
}}

grok {
match =>{
"status_msg" => ".*\"message\":\s*\"%{DATA:status_message}\""
}}

mutate {
add_field => {"source" => "jenkins_log"}
}

mutate {
remove_field => [ "message" ]
}
}

if "JENKINS_XML" in [tags] {

xml {
source => "message"
store_xml => false
target => "build_stuff"
xpath => [
"/flow-build/queueId/text()", "queueId",
"/flow-build/timestamp/text()", "xmltimestamp",
"/flow-build/duration/text()", "duration",
"/flow-build/result/text()", "result",
"/flow-build/startTime/text()", "startTime"
]
}

mutate {
add_field => {"startTime_Int" => "%{startTime}"}
add_field => {"xmltimestamp_Int" => "%{xmltimestamp}"}
add_field => { "duration_Int" => "%{duration}"}
add_field => {"end_time" => "%{startTime}" }
add_field => {"source" => "jenkins_build.xml"}
}

mutate {
convert => {"startTime_Int" => "integer"}
convert => {"xmltimestamp_Int" => "integer"}
convert => {"duration_Int" => "integer"}
convert => {"end_time" => "integer"}
}

ruby {code => 'event.set("end_time", (event.get("startTime").to_i + event.get("duration").to_i))'}

ruby {code => 'event.set("duration_Int", (event.get("duration").to_i/1000))'}

mutate {
convert => {"end_time" => "integer"}
}

date {
match => ["startTime_Int", "UNIX", "UNIX_MS"]
target => "startTime_time"
}

date {
match => ["xmltimestamp_Int", "UNIX", "UNIX_MS"]
target => "xmltimestamp_time"
}

date {
match => ["end_time", "UNIX", "UNIX_MS"]
target => "end_time_time"
}

}

}

output {
if "JENKINS_LOG" in [tags] {
elasticsearch {
hosts => ["localhost:9200"]
index => "jenkinslog-created-by-me"
}
}
if "JENKINS_XML" in [tags] {
elasticsearch {
hosts => ["localhost:9200"]
index => "xml-created-by-me"
}
}
stdout {
codec => rubydebug
}
}

